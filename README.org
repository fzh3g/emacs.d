#+TITLE: Naive Emacs configuration

* Introduction

This is my personal Emacs configuration I play with almost everyday.
I rewrote [[https://github.com/purcell/emacs.d][Purcell's Emacs configuration]] with [[https://github.com/jwiegley/use-package][use-package]] which makes it
faster and tidier. This configuration adds improvements
for the following languages or modes:

- C/C++
- Python
- LaTeX
- Org-mode
- Markdown

and some basic support for others like:

- Matlab
- Fortran
- Yaml
- Lua
- HTML/CSS
- VimScript (sometimes I use Emacs to edit =~/.vimrc= ðŸ˜„)

* Installation

To install, clone this repo to =~/.emacs.d=. Please backup your old
=~/.emacs= and =~/.emacs.d= first

#+begin_src sh
  git clone https://github.com/zhengfaxiang/emacs.d.git ~/.emacs.d
#+end_src

Then just fire up your Emacs, further third-party packages will be
automatically downloaded and installed.

* Update

Update this config by entering =~/.emacs.d= and typing =git pull=. You
also need to update the third-party packages by:

~M-x package-list-packages~, then ~U~ followed by ~x~.

* Before you start

For fully enjoying the powerfull features of this configuration, there's
some recommended instructions:

** Packages

I personally use [[https://mirrors.tuna.tsinghua.edu.cn/elpa/][TUNA]] for faster package installing and updating. If you find
it slow, you may modify the =package-archeves= variable in =lisp/init-elpa.el=.

** Spelling

- =flyspell= is used for automatic spell checking
- Install =aspell= & =aspell-en= or =hunspell= & =hunspell-en= through your
  system package manager
- you can easily =C-c f= to correct a word using =flyspell-correct-ivy=

** Python

- [[https://github.com/tkf/emacs-jedi][emacs-jedi]] is used for auto completion. Install =jedi=, =service_factory=
  by =pip= or system package manager.
- Install =flake8=, =autopep8=, =pylint= by =pip= or system package manager
  for syntax checking with [[https://github.com/flycheck/flycheck][flycheck]].
- Don't forget ~M-x jedi:install-server~ before using python-mode
- If you're coding with multiple versions of Python, install
  [[https://virtualenv.pypa.io/en/latest/][virtualenv]] through =pip install=. After modified your virtualenv, use
  ~M-x pyvenv-activate~ to activate it.

** C/C++

- [[https://github.com/Sarcasm/irony-mode][irony-mode]] is used to improve the editing experience for the C, C++ and
  Object-C languages.
- Install [[http://clang.llvm.org/doxygen/group__CINDEX.html][libclang]] and [[http://www.cmake.org/][cmake]] through your system package manager
- ~M-x irony-install-server~ to install =irony-server=

** Ag

[[https://github.com/ggreer/the_silver_searcher][Ag]] (aka the silver searcher) is required by =counsel-ag= for nice code
searching experience.

** IDL (Interactive Data Language)

Emacs support IDL with its embedded =IDLWave-mode= and =IDLWave-shell=. If
you are using IDL version 7.1, then you may have to do something within
your terminal to fix a warning:

#+BEGIN_SRC sh
  sudo mkdir /usr/local/itt/idl71/help/online_help
  sudo ln -s /usr/local/itt/idl71/help/idl_catalog.xml \
       /usr/local/itt/idl71/help/online_help/
  sudo ln -s /usr/local/itt/idl71/help/idlithelp.xml \
       /usr/local/itt/idl71/help/online_help/
  sudo ln -s /usr/local/itt/idl71/help/template_help.xml \
       /usr/local/itt/idl71/help/online_help/
#+END_SRC

then open your Emacs and  =M-x idl-rescan-asynchronously=.

* More features

** Ivy

[[https://github.com/abo-abo/swiper][Ivy]] is a completion method that's similar to =Ido=, but with emphasis on
simplicity and customizability.

| Keybinding | Command                    |
|------------+----------------------------|
| =C-x C-f=  | counsel-find-file          |
| =M-x=      | counsel-M-x                |
| =M-y=      | counsel-yank-pop           |
| =C-s s=    | counsel-grep-or-swiper     |
| =C-s a=    | counsel-ag                 |
| =C-s u=    | counsel-unicode-char       |
| =C-s l=    | counsel-locate             |
| =C-s g=    | counsel-git                |
| =C-s k=    | counsel-git-grep           |
| =C-h v=    | counsel-describe-variable  |
| =C-h S=    | counsel-info-lookup-symbol |
| =C-h f=    | counsel-describe-function  |
| =C-h k=    | counsel-descbinds          |
| =C-h b=    | counsel-bookmark           |
| =C-s i=    | ivy-imenu-anywhere         |
| =C-c C-r=  | ivy-resume                 |

** Company

[[https://github.com/company-mode/company-mode][Company-mode]] is used for auto-completion. =C-h= to abort completion may be
helpful.

** Yasnippet

[[https://github.com/joaotavora/yasnippet][Yasnippet]] is a template system for Emacs. Amazing and easy to extend.

** Magit

[[https://github.com/magit/magit][Magit]] is used for magical Git integration. You can run it by =C-x g=.

** Projectile

[[https://github.com/bbatsov/projectile][Projectile]] is for efficient project management. Jumping between projects,
finding file in a project, etc, do what you want. =C-c p= and you will see
a popup window by [[https://github.com/justbur/emacs-which-key][which-key]] with a series of keybindings about =projectile=.

** Multiple Cursors

[[https://github.com/magnars/multiple-cursors.el][Multiple-cursors]] gives you multi-cursor editing experience.

| Keybinding      | Command                       |
|-----------------+-------------------------------|
| =C-c m c=       | mc/edit-lines                 |
| =C-c m e=       | mc/edit-ends-of-lines         |
| =C-c m a=       | mc/edit-beginnings-of-lines   |
| =C-c m r=       | set-rectangular-region-anchor |
| =C-S-<mouse-1>= | mc/add-cursor-on-click        |
| =C->=           | mc/mark-next-like-this        |
| =C-<=           | mc/mark-previous-like-this    |
| =C-c C-<=       | mc/mark-all-like-this         |

** Expand Region

[[https://github.com/magnars/expand-region.el][Expand-region]] increases the selected region by semantic units.

| Keybinding | Command            |
|------------+--------------------|
| =C-M-]=    | er/expand-region   |
| =C-M-[=    | er/contract-region |

** Undo Tree

Undo tree treats undo history as a branching tree of changes, which can be run
by =C-x u=.

** Highlight Symbol

[[https://github.com/nschum/highlight-symbol.el][Highlight-symbol]] automatically highlight symbol at point. You can use =M-p= and
=M-n= to navigate between highlighted symbols, and also can use =M-s r= to
apply query replace.

** Smartparens

[[https://github.com/Fuco1/smartparens][Smartparens]] is a minor mode for Emacs that deals with parens pairs and
tries to be smart about it. See =lisp/init-smartparens.el= for keybindings.

** Anzu

[[https://github.com/syohex/emacs-anzu][Anzu]] provides a minor mode which displays current match and total matches
information in the mode-line in various search modes.

| Keybinding | Command                   |
|------------+---------------------------|
| =M-%=      | anzu-query-replace        |
| =C-M-%=    | anzu-query-replace-regexp |

** Visual Regexp

[[https://github.com/benma/visual-regexp.el][Visual-regexp]] is a regexp/replace command for Emacs with interactive visual
feedback.

| Keybinding | Command         |
|------------+-----------------|
| =C-c v r=  | vr/replace      |
| =C-c v q=  | vr/query-replce |
| =C-c v m=  | vr/mc-mark      |

** Avy

[[https://github.com/abo-abo/avy][Avy]] is for jumping to visible text using a char-based decision tree.

| Keybinding | Command                    |
|------------+----------------------------|
| =M-s w=    | avy-goto-word-or-subword-1 |
| =M-s l=    | avy-goto-line              |

** Window Numbering

[[https://github.com/nschum/window-numbering.el][Window-numbering]] uses =M-1= through =M-0= to navigate window.

** Buffer Move

Buffer-move is used for swapping buffers.

| Keybinding      | Command        |
|-----------------+----------------|
| =C-x w <up>=    | buf-move-up    |
| =C-x w <down>=  | buf-move-down  |
| =C-x w <left>=  | buf-move-left  |
| =C-x w <right>= | buf-move-right |

** Google This

[[https://github.com/Malabarba/emacs-google-this][Google-this]] is for launching google searches from within Emacs. =C-c /= is
the prefix key.

** Crux

[[https://github.com/bbatsov/crux][Crux]] bundles a few useful interactive commands to enhance your overall Emacs
experience. I use the following frequently:

| Keybinding        | Command                     |
|-------------------+-----------------------------|
| =C-a=             | crux-move-beginning-of-line |
| =C-c o=           | crux-open-with              |
| =C-o=             | crux-smart-open-line        |
| =C-S-o=           | crux-smart-open-line-above  |
| =C-<backspace>=   | crux-kill-line-backwards    |
| =C-S-<backspace>= | crux-kill-whole-line        |
| =C-c r=           | crux-rename-file-and-buffer |

** Terminal

If you want to use shell within Emacs,

| Keybinding | Command             |
|------------+---------------------|
| =C-x t e=  | shell-pop-eshell    |
| =C-x t s=  | shell-pop-shell     |
| =C-x t m=  | shell-pop-multiterm |
| =C-x t t=  | shell-pop-ansi-term |
| =C-x t T=  | shell-pop-term      |

** Sudo Save

If want to edit a file with root privilege, just =C-x C-q= to disable
=read-only-mode= and after you modified the file, save your change using
=C-x M-s=.

** Adjust Opacity

=M-C-8=, =M-C-9= and =M-C-0= is used to adjust the opacity of Emacs
graphics window program.
* References & Resources

- [[https://github.com/purcell/emacs.d][Purcell's emacs.d]]
- [[https://github.com/syl20bnr/spacemacs][Spacemacs]]
- [[https://github.com/bbatsov/prelude][Prelude]]
- [[https://github.com/redguardtoo/emacs.d][Bin Chen's emacs.d]]
- +[[https://github.com/xiaohanyu/oh-my-emacs][Oh-my-emacs]]+
- [[http://pages.sachachua.com/.emacs.d/Sacha.html][Sacha Chua's Emacs Configuration]]
- [[https://www.masteringemacs.org/][Mastering Emacs]]
- [[https://emacswiki.org/][Emacs Wiki]]
- [[https://github.com/redguardtoo/mastering-emacs-in-one-year-guide][Mastering Emacs in One year]]
- [[http://planet.emacsen.org/][Planet Emacsen]]
- [[http://orgmode.org/worg/index.html][Worg, Org-Mode Community]]
- [[http://endlessparentheses.com/][Endless Parentheses]]
